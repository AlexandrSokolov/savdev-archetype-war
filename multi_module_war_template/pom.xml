<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.savdev.mvn.mm.template.project</groupId>
  <artifactId>template-project-parent</artifactId>
  <packaging>pom</packaging>
  <version>1.0.0</version>

  <name>Template Project Parent</name>

  <url>http://www.savdev.com</url>

  <description>Project Description</description>
  <organization>
    <name>Sav Dev</name>
    <url>http://www.savdev.com</url>
  </organization>

  <scm>
    <connection>scm:git:git@github.com:AlexandrSokolov/savdev-archetype-war.git</connection>
    <developerConnection>scm:git:git@github.com:AlexandrSokolov/savdev-archetype-war.git</developerConnection>
    <url>https://github.com/AlexandrSokolov/savdev-archetype-war/wiki</url>
  </scm>

  <properties>
    <failOnMissingWebXml>false</failOnMissingWebXml>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

    <frontend-maven-plugin.version>1.6</frontend-maven-plugin.version>
    <node.version>v12.14.1</node.version>
    <npm.version>6.13.4</npm.version>
    <maven-war-plugin.version>3.2.3</maven-war-plugin.version>
    <buildnumber-maven-plugin.version>1.4</buildnumber-maven-plugin.version>
    <gmaven-plugin.version>1.0</gmaven-plugin.version>
    <maven-resources-plugin.version>3.1.0</maven-resources-plugin.version>
    <findbugs-maven-plugin.version>3.0.5</findbugs-maven-plugin.version>
    <maven-pmd-plugin.version>3.13.0</maven-pmd-plugin.version>
    <jacoco-maven-plugin.version>0.8.5</jacoco-maven-plugin.version>
    <maven-jxr-plugin.version>3.0.0</maven-jxr-plugin.version>
    <maven-site-plugin.version>3.9.0</maven-site-plugin.version>
    <maven-deploy-plugin.version>2.8.2</maven-deploy-plugin.version>
    <!-- must be the same as ${enunciate.version}-->
    <enunciate-plugin.version>2.13.1</enunciate-plugin.version>

    <skipReactBuild>false</skipReactBuild>
  </properties>

  <profiles>
    <profile>
      <id>skip-react-build</id>
      <properties>
        <skipReactBuild>true</skipReactBuild>
      </properties>
    </profile>
  </profiles>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>${project.groupId}</groupId>
        <artifactId>template-project-deps</artifactId>
        <version>${project.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <modules>
    <module>deps</module>
    <module>domain_api</module>
    <module>commons_cron</module>
    <module>commons_config</module>
    <module>commons_jax_rs_client</module>
    <module>rest_api</module>
    <module>sql_datasource</module>
    <module>domain</module>
    <module>front_end_war</module>
  </modules>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>com.github.eirslett</groupId>
          <artifactId>frontend-maven-plugin</artifactId>
          <version>${frontend-maven-plugin.version}</version>
          <configuration>
            <skip>${skipReactBuild}</skip>
            <workingDirectory>${basedir}/react</workingDirectory>
            <installDirectory>${project.build.directory}</installDirectory>
          </configuration>
          <executions>
            <!-- installs node and npm into ${installDirectory}/node -->
            <execution>
              <id>Install NodeJs and NPM</id>
              <goals>
                <goal>install-node-and-npm</goal>
              </goals>
              <phase>process-sources</phase>
              <configuration>
                <nodeVersion>${node.version}</nodeVersion>
                <npmVersion>${npm.version}</npmVersion>
              </configuration>
            </execution>
            <execution>
              <!-- installs all deps into ${workingDirectory}/node_modules-->
              <id>Install NPM Dependencies</id>
              <goals>
                <goal>npm</goal>
              </goals>
              <phase>process-sources</phase>
              <configuration>
                <arguments>install</arguments>
              </configuration>
            </execution>
            <execution>
              <id>Run NodeJs compile</id>
              <goals>
                <goal>npm</goal>
              </goals>
              <phase>prepare-package</phase>
              <configuration>
                <arguments>run build</arguments>
                <skipTests>true</skipTests>
              </configuration>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-war-plugin</artifactId>
          <version>${maven-war-plugin.version}</version>
          <configuration>
            <webResources>
              <resource>
                <directory>${basedir}/react/build</directory>
                <targetPath>/</targetPath>
              </resource>
              <resource>
                <!-- this is relative to the pom.xml directory -->
                <directory>${basedir}/../rest_api/target/enunciate/docs</directory>
                <targetPath>docs</targetPath>
              </resource>
            </webResources>

          </configuration>
        </plugin>

        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>buildnumber-maven-plugin</artifactId>
          <version>${buildnumber-maven-plugin.version}</version>
          <executions>
            <execution>
              <phase>generate-resources</phase>
              <goals>
                <goal>create</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <!--
            <buildNumberPropertiesFileLocation>${project.build.directory}/buildNumber.properties</buildNumberPropertiesFileLocation>
            -->
            <scmBranchPropertyName>scmBranch</scmBranchPropertyName>
            <buildNumberPropertyName>scmRevision</buildNumberPropertyName>
            <revisionOnScmFailure>0</revisionOnScmFailure>
            <timestampPropertyName>buildTime</timestampPropertyName>
            <timestampFormat>{0,date,yyyy-MM-dd HH:mmXXX}</timestampFormat>
            <doCheck>false</doCheck>
            <doUpdate>false</doUpdate>
            <useLastCommittedRevision>true</useLastCommittedRevision>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.codehaus.groovy.maven</groupId>
          <artifactId>gmaven-plugin</artifactId>
          <version>${gmaven-plugin.version}</version>
          <executions>
            <execution>
              <phase>generate-resources</phase>
              <goals>
                <goal>execute</goal>
              </goals>
              <configuration>
                <source>
                  project.properties["buildHost"] =
                    InetAddress.getLocalHost().getHostName()
                </source>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>${maven-resources-plugin.version}</version>
          <configuration>
            <delimiters>
              <delimiter>@</delimiter>
            </delimiters>
            <encoding>${project.build.sourceEncoding}</encoding>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>findbugs-maven-plugin</artifactId>
          <version>${findbugs-maven-plugin.version}</version>
          <configuration>
            <!--
                Enables analysis which takes more memory but finds more bugs.
                If you run out of memory, changes the value of the effort element
                to 'Low'.
            -->
            <effort>Max</effort>
            <!-- Build does fail if problems are found -->
            <failOnError>true</failOnError>
            <!-- Reports all bugs (other values are medium and max) -->
            <threshold>Low</threshold>
            <!-- Produces XML report -->
            <xmlOutput>true</xmlOutput>
            <!-- Configures the directory in which the XML report is created -->
            <findbugsXmlOutputDirectory>${project.build.directory}/findbugs</findbugsXmlOutputDirectory>
            <excludeFilterFile>${basedir}/../code_quality/findbugs-exclude.xml</excludeFilterFile>
          </configuration>
          <executions>
            <!--
                Ensures that FindBugs inspects source code when project is compiled.
            -->
            <execution>
              <id>analyze-install-findbugs</id>
              <phase>install</phase>
              <goals>
                <goal>check</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-pmd-plugin</artifactId>
          <version>${maven-pmd-plugin.version}</version>
          <configuration>
            <!-- <linkXref>true</linkXref>-->
            <sourceEncoding>${project.build.sourceEncoding}</sourceEncoding>
            <!-- The minimum number of tokens that need to be duplicated before it causes a violation.-->
            <minimumTokens>100</minimumTokens>
            <!-- do not set targetJdk, violation does not trigger build failed then !!-->
            <!-- <targetJdk>1.7</targetJdk>-->
            <excludes>
              <exclude>**/*Bean.java</exclude>
              <exclude>**/generated/*.java</exclude>
            </excludes>
            <excludeRoots>
              <excludeRoot>target/generated-sources/stubs</excludeRoot>
            </excludeRoots>
          </configuration>
          <executions>
            <execution>
              <id>analyze-install-pmd</id>
              <phase>install</phase>
              <goals>
                <goal>check</goal>
                <goal>cpd-check</goal>
              </goals>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.jacoco</groupId>
          <artifactId>jacoco-maven-plugin</artifactId>
          <version>${jacoco-maven-plugin.version}</version>
          <configuration>
            <excludes>
              <!-- exclude the whole package without its subpackages, only all classes-->
              <exclude>com/some/package/*</exclude>
              <exclude>**/*Config.*</exclude>
              <exclude>**/*Dto.*</exclude>
            </excludes>
          </configuration>
          <executions>
            <execution>
              <id>jacoco-coverage-initialize</id>
              <goals>
                <goal>prepare-agent</goal>
              </goals>
            </execution>
            <execution>
              <id>jacoco-coverage-report</id>
              <phase>test</phase>
              <goals>
                <goal>report</goal>
              </goals>
            </execution>
            <!-- Threshold -->
            <execution>
              <id>jacoco-coverage-check</id>
              <!-- default phase is verify-->
              <phase>install</phase>
              <goals>
                <goal>check</goal>
              </goals>
              <configuration>
                <!-- see https://dzone.com/articles/reporting-code-coverage-using-maven-and-jacoco-plu-->
                <rules>
                  <rule>
                    <!-- CLASS, PACKAGE-->
                    <element>CLASS</element>
                    <limits>
                      <limit>
                        <counter>LINE</counter>
                        <value>COVEREDRATIO</value>
                        <!-- <minimum>100%</minimum>-->
                        <minimum>0%</minimum>
                      </limit>
                    </limits>
                  </rule>
                </rules>
              </configuration>
            </execution>
          </executions>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-site-plugin</artifactId>
          <version>${maven-site-plugin.version}</version>
        </plugin>

        <plugin>
          <groupId>com.webcohesion.enunciate</groupId>
          <artifactId>enunciate-maven-plugin</artifactId>
          <version>${enunciate-plugin.version}</version>
          <configuration>
            <skipEnunciate>false</skipEnunciate>
            <configFile>${project.resources[0].directory}/doc/enunciate/enunciate.xml</configFile>
            <!-- default value for docsDir: site-->
            <docsDir>${project.build.directory}</docsDir>
          </configuration>
          <executions>
            <execution>
              <!-- <phase>site</phase>-->
              <goals>
                <goal>docs</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-source-plugin</artifactId>
          <executions>
            <execution>
              <id>attach-sources</id>
              <phase>package</phase>
              <goals>
                <goal>jar</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>${maven-deploy-plugin.version}</version>
          <configuration>
            <skip>true</skip>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>

  <reporting>
    <plugins>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>findbugs-maven-plugin</artifactId>
        <version>${findbugs-maven-plugin.version}</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-pmd-plugin</artifactId>
        <version>${maven-pmd-plugin.version}</version>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jxr-plugin</artifactId>
        <version>${maven-jxr-plugin.version}</version>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${jacoco-maven-plugin.version}</version>
      </plugin>
    </plugins>
  </reporting>

</project>